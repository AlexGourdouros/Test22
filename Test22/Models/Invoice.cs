//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test22.Models
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;

    public partial class Invoice
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Invoice()
        {
            this.InvoiceItems = new HashSet<InvoiceItem>();
        }
    
        public int InvoiceID { get; set; }
        [Column(TypeName = "date")]
        [DataType(DataType.Date)]
        [Display(Name = "Invoice Date")]
        public System.DateTime InvoiceCreated { get; set; }
        [Column(TypeName = "money")]
        [Display(Name = "Amount Paid")]
        public decimal AmountPaid { get; set; }
        [Column(TypeName = "money")]
        [Display(Name = "Amount Due")]
        public Nullable<decimal> AmountDue
        {
            get
            {
                return
                 (InvoiceItems.Sum(b => (decimal?)b.ExtendedCost)) - AmountPaid ?? 0;

            }
            set { }
        }
        [Column(TypeName = "money")]
        [Display(Name = "Total")]
        public Nullable<decimal> Total
        {
            get
            {
                return
                 (InvoiceItems.Sum(b => (decimal?)b.ExtendedCost)) ?? 0;

            }
            set { }
        }
        [Display(Name = " Distributer")]
        public int DistributerId { get; set; }
        [Display(Name = "Payment Type")]
        public int PaymentID { get; set; }
        [Display(Name = "User")]
        public int UserID { get; set; }
        [Display(Name = "Payment Status")]
        // public byte PaymentStatus { get; set; }

       
        public byte PaymentStatus
           {
            get
            {
                if (AmountDue <= 0)
                {
                    return PaymentStatus = 0;
                }
                else { return 1; }
              
            }
               
               set { }
            
           } 
           
        [Column(TypeName = "date")]
        [DataType(DataType.Date)]
        [Display(Name = "Received Date")]
        public System.DateTime ItemsReceived { get; set; }
       
        public virtual Distributer Distributer { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<InvoiceItem> InvoiceItems { get; set; }
        
        public virtual Payment Payment { get; set; }
       
        public virtual User User { get; set; }
    }
}
